{%- assign product = all_products[section.settings.featured_product] -%}
{%- if product.empty? -%}{%- assign section_onboarding = true -%}{%- endif -%}
<div class="product-template__container wow fadeIn" itemscope itemtype="http://schema.org/Product" id="ProductSection-{{ section.id }}" data-section-id="{{ section.id }}" data-section-type="product">
  	<div class="page-width">
        <meta itemprop="name" content="{{ product.title }}">
        <meta itemprop="url" content="{{ shop.url }}{{ product.url }}">
        <meta itemprop="image" content="{{ product.featured_image.src | img_url: '800x' }}">
        {% comment %}Get first variant, or deep linked one{% endcomment %}
        {%- assign current_variant = product.selected_or_first_available_variant -%}
        {%- assign product_thumb_size = '160x160' -%}
        {%- assign product_image_zoom_size = '1024x1024' -%}
        {%- assign enable_zoom = section.settings.enable_zoom -%}

        {%- case section.settings.image_size -%}
            {% when 'small' %}
              {%- assign product_image_width = 'medium-up--one-third' -%}
              {%- assign product_description_width = 'medium-up--two-thirds' -%}
              {%- assign product_thumbnail_width = 'medium-up--one-third' -%}
              {%- assign product_image_size = '450x' -%}
            {% when 'medium' %}
              {%- assign product_image_width = 'medium-up--one-half' -%}
              {%- assign product_description_width = 'medium-up--one-half' -%}
              {%- assign product_thumbnail_width = 'medium-up--one-quarter' -%}
              {%- assign product_image_size = '700x' -%}
            {% when 'large' %}
              {%- assign product_image_width = 'medium-up--two-thirds' -%}
              {%- assign product_description_width = 'medium-up--one-third' -%}
              {%- assign product_thumbnail_width = 'medium-up--one-fifth' -%}
              {%- assign product_image_size = '900x' -%}
        {%- endcase -%}
		<div class="grid grid--table product-single">
			<div class="grid__item wow fadeIn table--cell product-single__photos {{ product_image_width }}{% if section.settings.image_size == 'full' %} product-single__photos--full{% endif %}" data-wow-delay="100ms">
				{%- assign featured_img_src = product.selected_or_first_available_variant.featured_image | default: product.featured_image -%}
				{%- assign featured_img_alt = current_variant.featured_image.alt | default: product.featured_image.alt -%}
				<div id="FeaturedImageZoom-{{ section.id }}" class="FeaturedImageZoom-{{ section.id }} product-single__photo{% if product.images.size > 1 %} product-single__photo--has-thumbnails{% endif %}" {% if enable_zoom %}data-zoom="{{ featured_img_src | img_url: product_image_zoom_size }}"{% endif %}>
					{% unless section_onboarding %}
                        <img src="{{ featured_img_src | img_url: product_image_size}}" alt="{{ featured_img_alt }}" id="FeaturedImage-{{ section.id }}" class="FeaturedImage-{{ section.id }} product-featured-img{% if enable_zoom %} js-zoom-enabled{% endif %}">
                    {% else %}
                        {{ 'product-1' | placeholder_svg_tag: 'placeholder-svg' }}
                    {% endunless %}
                </div>
			</div>
			<div class="grid__item table--cell {{ product_description_width }} wow fadeIn" data-wow-delay="200ms">
				<div class="product-single__meta">
					{% unless section_onboarding %}
						{%- assign compare_at_price = current_variant.compare_at_price -%}
                  		{%- assign price = current_variant.price -%}
                  		{%- assign price_varies = current_variant.price_varies -%}
                  		{%- assign available = current_variant.available -%}
                	{% else %}
                		{%- assign compare_at_price = 1999 -%}
                		{%- assign price = 1999 -%}
                		{%- assign price_varies = false -%}
                		{%- assign available = true -%}
                	{% endunless %}
                	<h2 class="grid_item-title h1">{{ section.settings.featured_product_lbl }}</h2>
                  	{%- if section.settings.show_vendor -%}<div class="product-vendor">{{ product.vendor | link_to_vendor }}</div>{%- endif -%}
                	<h2 itemprop="name" class="product-single__title"><a href="{{ product.url | within: collection }}">{{ product.title }}</a></h2>
                  	
					{% if section.settings.show_product_review %}<div class="prInfoRow"><span class="shopify-product-reviews-badge" data-id="{{ product.id }}"></span></div>{% endif %}
                  
					<div itemprop="offers" itemscope itemtype="http://schema.org/Offer">
                      	{%- unless settings.catalog-mode -%}
                          <meta itemprop="priceCurrency" content="{{ shop.currency }}">
                          <link itemprop="availability" href="http://schema.org/{% if product.available %}InStock{% else %}OutOfStock{% endif %}">
                          <p class="product-single__price product-single__price-{{ section.id }}{% unless current_variant.available %} product-price--sold-out{% endunless %}">
                              {% if current_variant.compare_at_price > current_variant.price %}
                                  <span class="visually-hidden">{{ 'products.product.regular_price' | t }}</span>
                                  <s id="ComparePrice-{{ section.id }}">{{ current_variant.compare_at_price | money }}</s>
                                  <span class="product-price__price product-price__price-{{ section.id }} product-price__sale product-price__sale--single">
                                      <span id="ProductPrice-{{ section.id }}" content="{{ current_variant.price | divided_by: 100.00 }}">{{ current_variant.price | money }}</span>
                                  </span>
                                  {% if section.settings.show_saleoff %}<span class="off">(<span>{{ current_variant.compare_at_price | minus: current_variant.price | times: 100 | divided_by: current_variant.compare_at_price }}</span>% {{ 'products.product.off' | t}})</span>{% endif %}
                              {% else %}
                                  <span class="visually-hidden">{{ 'products.product.regular_price' | t }}</span>
                                  <s id="ComparePrice-{{ section.id }}" class="hide">{{ current_variant.compare_at_price | money }}</s>
                                  <span class="product-price__price product-price__price-{{ section.id }}">
                                      <span id="ProductPrice-{{ section.id }}" content="{{ current_variant.price | divided_by: 100.00 }}">{{ current_variant.price | money }}</span>
                                      <span class="product-price__sale-label product-price__sale-label-{{ section.id }} hide">{{ 'products.product.on_sale' | t }}</span>
                                  </span>
                              {% endif %}
                          </p>
                      	{%- endunless -%}

                      	{%- if section.settings.fake_orders -%}
                            {%- assign ordermsg = section.settings.orders_msg | replace: '[orders]','<strong class="items"></strong>' | replace: '[hours]','<strong class="time"></strong>' -%}
                            <div class="orderMsg" data-user="{{section.settings.orders}}" data-time="{{section.settings.orders_time}}">{% include 'icon-fire' %} {{ordermsg}}</div>
                        {%- endif -%}

                      {% if section.settings.show_short_des %}
                        <div class="product-single__description rte">
                          	{%- assign meta = product.metafields.meta -%}
                          	{%- assign key = 'short_des' -%}
                          	{%- if meta.short_des != blank -%}
                          		{{ meta.short_des }}
                          	{%- elsif product.empty? -%}
                          		{{ 'homepage.onboarding.product_description' | t }}
                          	{%- else -%}
                          		{{ product.description | strip_html | truncatewords: 50 }}
                          	{%- endif -%}
                        </div>
                    	{% endif %}
                        
                  		{%- comment -%}****	product variants **** {%- endcomment -%}
                      	{%- unless product.empty? -%}
                            {%- if section.settings.show_variant_swatches -%}{% assign hidedropdown = " hidedropdown" %}{%- endif -%}
                            {%- assign formclass = 'product-form product-form-' | append: section.id | append: hidedropdown -%}
                            {% form 'product', product, class: formclass %}
                                {%- unless product.options.size == 1 and product.variants[0].title == 'Default Title' -%}
                                    {% for option in product.options_with_values %}
                                        <div class="selector-wrapper js product-form__item">
                                            <label {% if option.name == 'default' %}class="label--hidden" {% endif %}for="SingleOptionSelector-{{ forloop.index0 }}">{{ option.name }}</label>
                                            <select class="single-option-selector single-option-selector-{{ section.id }} product-form__input selectbox" id="SingleOptionSelector-{{ forloop.index0 }}" data-index="option{{ forloop.index }}">
                                            {% for value in option.values %}<option value="{{ value | escape }}"{% if option.selected_value == value %} selected="selected"{% endif %}>{{ value }}</option>{% endfor %}
                                            </select>
                                        </div>
                                    {% endfor %}
                                {%- endunless -%}

                                <select name="id" id="ProductSelect-{{ section.id }}" data-section="{{ section.id }}" class="product-form__variants selectbox no-js">
                                {%- for variant in product.variants -%}
                                    {%- if variant.available -%}
                                        <option {% if variant == product.selected_or_first_available_variant %} selected="selected" {% endif %} value="{{ variant.id }}">{{ variant.title }}</option>
                                    {%- else -%}
                                        <option disabled="disabled">{{ variant.title }} - {{ 'products.product.sold_out' | t }}</option>
                                    {%- endif -%}
                                {%- endfor -%}
                                </select>
  <div class="bold_options" data-product-id="{{ product.id }}"></div>

                                {%- comment -%}****	product swatches **** {%- endcomment -%}
                                {%- if section.settings.show_variant_swatches and product.available and product.variants.size > 1 and product.variants[0].title != 'Default Title' -%}
                                    {%- for option in product.options -%}{% include 'swatch' with option %}{%- endfor -%}
                                {%- endif -%}
								{%- unless settings.catalog-mode -%}
                                <div class="product-action clearfix">
                                    <div class="product-form__item--quantity">
                                        <div class="wrapQtyBtn">
                                            <div class="qtyField">
                                                <a class="qtyBtn minus" href="javascript:void(0);"><i class="ad ad-minus-r"></i></a>
                                                <input type="text" id="Quantity" name="quantity" value="1" class="product-form__input qty" />
                                                <a class="qtyBtn plus" href="javascript:void(0);"><i class="ad ad-plus-r"></i></a>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="product-form__item--submit">
                                        <button type="submit" name="add" id="AddToCart-{{ section.id }}" {% unless current_variant.available %}disabled="disabled"{% endunless %} class="btn product-form__cart-submit{% if product.options.size == 1 and product.variants[0].title == 'Default Title' %} product-form__cart-submit--small{% endif %}">
                                            <span id="AddToCartText-{{ section.id }}">{%- unless current_variant.available -%}{{ 'products.product.unavailable' | t }}{%- else -%}{{ 'products.product.add_to_cart' | t }}{%- endunless -%}</span>
                                        </button>
                                      
                                    </div>
                                    {%- if section.settings.enable_payment_button -%}{{ form | payment_button }}{%- endif -%}
                                </div>
                      			{%- endunless -%}
                            {% endform %}
                            <div class="display-table shareRow">
                                <div class="display-table-cell {% unless section.settings.show_share_buttons == false %}medium-up--one-third{% endunless %}">{% include 'wishlist' %}</div>
                                {%- if section.settings.show_share_buttons -%}
                                    <div class="display-table-cell text-right">{% include 'social-sharing', share_title: product.title, share_permalink: product.url, share_image: product %}</div>
                                {%- endif -%}
                            </div>
                      	{%- endunless -%}
                	</div>
               	</div>
			</div>
		</div>
	</div>
</div>
{%- unless product.empty? -%}<script type="application/json" id="ProductJson-{{ section.id }}">{{ product | json }}</script>{%- endunless -%}
{{ 'option_selection.js' | shopify_asset_url | script_tag }}
<script type="text/javascript">
  // Override default values of shop.strings for each template.
  // Alternate product templates can change values of
  // add to cart button, sold out, and unavailable states here.
  theme.productStrings = {
    addToCart: {{ 'products.product.add_to_cart' | t | json }},
    soldOut: {{ 'products.product.sold_out' | t | json }},
    unavailable: {{ 'products.product.unavailable' | t | json }}
  }
  
  $(function(){
    $('.swatch :radio').change(function() {
      var optionIndex = $(this).closest('.swatch').attr('data-option-index');
      var optionValue = $(this).val();
      $(this).closest('form').find('.single-option-selector').eq(optionIndex).val(optionValue).trigger('change');
      {%- if settings.show_multiple_currencies -%}
		Currency.convertAll(shopCurrency, $('#currencies li.selected').attr('data-currency'));
      {%- endif -%}
    });
  });
  
{%- if product.variants.size > 1 -%}
  var variantImages = {},
    thumbnails,
    variant,
    variantImage,
    optionValue,
    productOptions = [];
    {% for variant in product.variants %}
       variant = {{ variant | json }};
       if ( typeof variant.featured_image !== 'undefined' && variant.featured_image !== null ) {
         variantImage =  variant.featured_image.src.split('?')[0].replace(/http(s)?:/,'');
         variantImages[variantImage] = variantImages[variantImage] || {};
         {% for option in product.options %}
         
           {% assign option_value = variant.options[forloop.index0] %}
           {% assign option_key = 'option-' | append: forloop.index0 %}
         	
           if (typeof variantImages[variantImage][{{ option_key | json }}] === 'undefined') {
             variantImages[variantImage][{{ option_key | json }}] = {{ option_value | json }};
           }
           else {
             var oldValue = variantImages[variantImage][{{ option_key | json }}];
             if ( oldValue !== null && oldValue !== {{ option_value | json }} )  {
               variantImages[variantImage][{{ option_key | json }}] = null;
             }
           }
         {% endfor %}
       }
       productOptions.push(variant);
    {% endfor %}
{%- endif -%}

// (c) Copyright 2016 Caroline Schnapp. All Rights Reserved. Contact: mllegeorgesand@gmail.com
// See https://docs.shopify.com/themes/customization/navigation/link-product-options-in-menus
var Shopify = Shopify || {};
Shopify.optionsMap = {};
Shopify.updateOptionsInSelector = function(selectorIndex) {
    
  switch (selectorIndex) {
    case 0:
      var key = 'root';
      var selector = $('.single-option-selector:eq(0)');
      break;
    case 1:
      var key = $('.single-option-selector:eq(0)').val();
      var selector = $('.single-option-selector:eq(1)');
      break;
    case 2:
      var key = $('.single-option-selector:eq(0)').val();  
      key += ' / ' + $('.single-option-selector:eq(1)').val();
      var selector = $('.single-option-selector:eq(2)');
  }
  
  var initialValue = selector.val();
  selector.empty();    
  var availableOptions = Shopify.optionsMap[key];
  for (var i=0; i<availableOptions.length; i++) {
    var option = availableOptions[i];
    var newOption = $('<option></option>').val(option).html(option);
    selector.append(newOption);
  }
  $('.swatch[data-option-index="' + selectorIndex + '"] .swatch-element').each(function() {
    if (jQuery.inArray($(this).attr('data-value'), availableOptions) !== -1) {
      $(this).removeClass('soldout').show().find(':radio').removeAttr('disabled','disabled').removeAttr('checked');
    }
    else {
      $(this).addClass('soldout').hide().find(':radio').removeAttr('checked').attr('disabled','disabled');
    }
  });
  if (jQuery.inArray(initialValue, availableOptions) !== -1) {
    selector.val(initialValue);
  }
  selector.trigger('change');  
  
};
Shopify.linkOptionSelectors = function(product) {
  // Building our mapping object.
  for (var i=0; i<product.variants.length; i++) {
    var variant = product.variants[i];
    if (variant.available) {
      // Gathering values for the 1st drop-down.
      Shopify.optionsMap['root'] = Shopify.optionsMap['root'] || [];
      Shopify.optionsMap['root'].push(variant.option1);
      Shopify.optionsMap['root'] = Shopify.uniq(Shopify.optionsMap['root']);
      // Gathering values for the 2nd drop-down.
      if (product.options.length > 1) {
        var key = variant.option1;
        Shopify.optionsMap[key] = Shopify.optionsMap[key] || [];
        Shopify.optionsMap[key].push(variant.option2);
        Shopify.optionsMap[key] = Shopify.uniq(Shopify.optionsMap[key]);
      }
      // Gathering values for the 3rd drop-down.
      if (product.options.length === 3) {
        var key = variant.option1 + ' / ' + variant.option2;
        Shopify.optionsMap[key] = Shopify.optionsMap[key] || [];
        Shopify.optionsMap[key].push(variant.option3);
        Shopify.optionsMap[key] = Shopify.uniq(Shopify.optionsMap[key]);
      }
    }
  }
  // Update options right away.
  Shopify.updateOptionsInSelector(0);
  if (product.options.length > 1) Shopify.updateOptionsInSelector(1);
  if (product.options.length === 3) Shopify.updateOptionsInSelector(2);
  // When there is an update in the first dropdown.
  $(".single-option-selector:eq(0)").change(function() {
    Shopify.updateOptionsInSelector(1);
    if (product.options.length === 3) Shopify.updateOptionsInSelector(2);
    return true;
  });
  // When there is an update in the second dropdown.
  $(".single-option-selector:eq(1)").change(function() {
    if (product.options.length === 3) Shopify.updateOptionsInSelector(2);
    return true;
  });
};

{% if product.available and product.options.size > 1 %}
  var $addToCartForm = $('form[action="/cart/add"]');
  if (window.MutationObserver && $addToCartForm.length) {
    if (typeof observer === 'object' && typeof observer.disconnect === 'function') {
      observer.disconnect();
    }
    var config = { childList: true, subtree: true };
    var observer = new MutationObserver(function(){
      observer.disconnect();
    });  
    observer.observe($addToCartForm[0], config);
  }
  Shopify.linkOptionSelectors({{ product | json }});
{% endif %}
{%- if product.options.size == 1 -%}
  {% for variant in product.variants %}
    {% unless variant.available %}
    $('.single-option-selector option').filter(function() { return $(this).html() === {{ variant.title | json }}; }).remove();
    $(".swatch-element.{{ variant.title | handleize }}").remove();
    {% endunless %}
  {% endfor %}
  $('.single-option-selector').trigger('change');
{%- endif -%}
  
</script>

{% schema %}
  {
    "name": "Single Product",
    "class": "index-section index-section--featured-product",
    "settings": [     
	  {
        "type": "text",
        "id": "featured_product_lbl",
		"label":" Product Box Title",
        "default": "Deal Of the Day"
      },
      {
        "type": "product",
        "id": "featured_product",
        "label": "Product"
      },	
      {
        "type": "select",
        "id": "image_size",
        "label": "Image size",
        "options": [
          { "value": "small", "label": "Small" },
		  { "value": "medium", "label": "Medium" },
          { "value": "large", "label": "Large" }
        ],
        "default": "medium"
      },            
      {
        "type": "checkbox",
        "id": "show_vendor",
        "label": "Show vendor",
        "default": false
      },
	  {
        "type": "checkbox",
        "id": "show_product_review",
        "label": "Show product review",
        "default": true
      },
 	{
        "type": "checkbox",
        "id": "show_short_des",
        "label": "Show Short Description?",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "enable_zoom",
        "label": "Enable image zoom",
        "default": true
      },		
      {
        "type": "checkbox",
        "id": "show_share_buttons",
        "label": "Show social sharing buttons",
        "default": true
      },
	  {
        "type": "header",       
        "content": "Variant style"
      },
	  {
        "type": "checkbox",
        "id": "show_variant_swatches",
        "label": "Show Variant Swatches?",
        "default": true
      },
      {
        "type": "select",
        "id": "color_type",
        "label": "Swatch Type",
        "default": "color",
		"info":"For swatch image type, image name must same as color name and in lowercase. Use '-' instead of space. Examples (Black = black.png, Navy Blue = navy-blue.png). Upload images on 'settings > files', For Variant Image, You must assign image to each of product variant from 'Products > Product'",
        "options": [
          { "value":"color", "label": "Color Swatch" },
          { "value":"image", "label": "Image Swatch" },
          { "value":"vrimage", "label": "Variant Image" }
        ]
      },
      {
        "type": "select",
        "id": "color_size",
        "label": "Swatch Size",
        "default": "small",
        "options": [
          { "value": "small", "label": "Small" },
          { "value": "medium", "label": "Medium" },
          { "value": "large", "label": "Large" }
        ]
      },
      {
        "type": "select",
        "id": "color_style",
        "label": "Swatch Style",
        "default": "rounded",
        "options": [
          { "value": "rounded", "label": "Rounded" },
          { "value": "rectangle", "label": "Square" },
          { "value": "rounded_rectangle", "label": "Rounded Rectangle" },
          { "value": "flat", "label": "Flat" }
        ]
      },
	  {
        "type": "header",       
        "content": "Fake Orders"
      },
      {
        "type": "checkbox",
        "id": "fake_orders",
        "label": "Enable Fake Orders",
        "default": false
      },
      {
        "type": "range",
        "id": "orders",
        "label": "Max Items",
        "min": 1,
        "max": 50,
        "step": 1,
        "default": 20
      },
      {
        "type": "range",
        "id": "orders_time",
        "label": "Oder time",
        "min": 5,
        "max": 48,
        "step": 1,
        "default": 24
      },
      {
        "type": "text",
        "id": "orders_msg",
        "label": "Orders Message",
        "default": "[orders] sold in last [hours] hours",
		"info":"Use '[orders]' for items counts and '[hours]' for hours counts"
      }
    ],
    "presets": [
      {
        "name": "Single Product",
        "category": "Products"
      }
    ]
  }
{% endschema %} 
